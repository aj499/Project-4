package project;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;//I think this is the right class to use; change later?
import java.util.HashMap;
import javax.swing.JPanel;

public class MapPanel extends JPanel implements ActionListener{

	public enum Continent{
		WORLD, NORTH_AMERICA, SOUTH_AMERICA, EUROPE, AFRICA, ASIA;
	}
	
	public enum MapMode{
		ECONOMIC, HEALTH; //TODO: rename later as appropriate to content?
	}
	
	//to make Eclipse shut up about the warning
	private static final long serialVersionUID = 1l;
	
	private DataManager worldData;
	private Continent currentView;//which continent are we looking at?
	private String currentCountry;//what country are we looking at right now?
	private MapMode currentMapMode;//what mode is the map in?
	private HashMap<String, AppButton> buttons;//a hash of all the buttons for the countries
	
	//images for the Maps
	private BufferedImage worldMapEconomic;
	private BufferedImage worldMapHealth;
	//and so on for each continent
	
	/**
	 * Creates a new MapPanel based on data from the given DataManager.
	 * 
	 * @param newWorldData the DataManager to load data from
	 */
	public MapPanel(DataManager newWorldData){
		//TODO: do Swing set up here as necessary
		//ie width, height setting, etc
		
		//assign DataManager
		worldData = newWorldData;
		
		//delegate to helper function for rest of setup
		init();
	}
	
	/**
	 * Sets up a MapPanel.
	 * Helper function for the constructor.
	 * <p>
	 * (Assumes that worldData has been set previously.)
	 */
	private void init(){
		//set default values for what we're looking at
		currentView = Continent.WORLD;
		currentCountry = "none";
		currentMapMode = MapMode.ECONOMIC;
		
		//load data from the DataManager
		String countryNames[] = worldData.getCountryList();
		
		//make a button for each country
		CountryData countryData;
		AppButton newButton;
		for(int i = 0; i < countryNames.length; i++){
			//get the country's data
			countryData = worldData.getDataForCountry(countryNames[i]);
			
			//make the button and set appropriate values on it
			newButton = new AppButton();
			newButton.setId(countryNames[i]);
			
			//add the button to the hash
			buttons.put(countryNames[i], newButton);
			
			//add the button to the layoutÉsomehow?
			//TODO: make this work with layouts
			//TODO: get x and y from the CountryData and pass them directly to the layout function thing
		}
		
		//TODO: load all the map images here
	}
	
	/**
	 * Respond to events generated by the UI
	 * 
	 * @param e the ActionEvent that represents the event that occurred
	 */
	public void actionPerformed(ActionEvent e){
		System.out.println("Event " + e.toString() + " did the thing!");
		
		//if the button clicked was the button for a country
		if(buttons.containsKey(((AppButton) e.getSource()).getId())){//hopefully this cast worksÉmake all buttons AppButtons to ensure that
			//change currentCountry appropriately
			
		}
	}
	
}
